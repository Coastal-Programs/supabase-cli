name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test on Node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node: ['22.x', '23.x']
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check TypeScript compilation
        run: npm run build

      - name: Run linter
        run: npm run lint

      - name: Check code formatting
        run: npm run format:check

      - name: Run tests
        run: npm test

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  performance:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run performance benchmarks
        run: npm run test:performance:quick

      - name: Comment PR with results
        uses: actions/github-script@v8
        if: always()
        with:
          script: |
            const fs = require('fs');
            const resultsFile = 'test-results.txt';

            let body = '## Performance Benchmark Results\n\n';

            if (fs.existsSync(resultsFile)) {
              const results = fs.readFileSync(resultsFile, 'utf8');
              body += '```\n' + results + '\n```';
            } else {
              body += 'No performance results found.';
            }

            body += '\n\nPerformance targets:\n';
            body += '- Startup time: < 700ms\n';
            body += '- Command execution: < 5s\n';
            body += '- Memory usage: < 200MB\n';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  package-validation:
    name: Validate Package
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Check package contents
        run: |
          echo "Checking package contents..."
          npm pack --dry-run

      - name: Test package installation
        run: |
          npm pack
          PACKAGE=$(ls *.tgz)
          echo "Testing package: $PACKAGE"
          npm install -g "./$PACKAGE"
          supabase-cli --version
          supabase-cli --help
